/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/

.page {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--main-text-color, #000);
  font-family: var(--font-family-base);
  font-size: var(--main-text-size, 18px);
  background-image: var(--background-gradient);
  background-size: 4px 4px, 4px 4px, cover; /* Устанавливаем точный размер ячеек для полос, чтобы избежать артефактов рендеринга, а финальный градиент растягиваем на всю страницу */
  background-attachment: fixed;
  min-inline-size: 320px;
  min-block-size: 100dvb;
  font-variation-settings: 'wght' var(--regular-font-weight, 400) var(--bold-font-weight, 700);
}

/* Хедер */

.header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  margin-block: 100px;
  padding-block: clamp(122px, 122px + 0.75vw, 128px);
  font-family: var(--font-family-accent);
  text-transform: uppercase;
}

.title {
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

.subtitle {
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

/* Main */

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
}

.cards-section {
  display: flex;
  flex-direction: column;
  gap: 50px;
}

.card {
  border: 2px solid var(--main-text-color, #000);
  background-color: var(--background-color, #FFF);
  inline-size: min(100vw, 700px);
}

.card__title {
  padding: 5px 10px;
  font-size: inherit;
  font-variation-settings: 'wght' var(--bold-font-weight, 700);
}

.card__image-wrapper {
  position: relative;
}

.card__label {
  position: absolute;
  opacity: 0.5;
  font-family: var(--font-family-accent);
  font-size: var(--label-text-size);
  text-transform: uppercase;
  text-shadow: 1px 1px var(--background-color, #FFF), -1px -1px var(--background-color, #FFF);
  inset-block-start: clamp(25px, 25px + (2 * (100vw - 375px) / 1065), 27px);
  inset-inline-end: clamp(13px, 13px + (14 * (100vw - 375px) / 1065), 27px);
  mix-blend-mode: hard-light;
}

@supports((text-stroke: 1px #FFF) or (-webkit-text-stroke: 1px #FFF)) {
  .card__label {
    text-shadow: none;
    text-stroke: 1px var(--background-color, #FFF);
    -webkit-text-stroke: 1px var(--background-color, #FFF);
  }
}

.card__image {
  border-block: 2px solid var(--main-text-color, #000);
  object-fit: cover;
  object-position: center;
  inline-size: 100%;
  block-size: 100%;
  aspect-ratio: 1/1;
}

.card__description {
  display: flex;
  flex-direction: column;
  gap: 25px;
  padding: 25px;
}

.card__icon-button {
  border: 2px solid transparent;
  transition: border-color 0.3s ease;
  block-size: 42px;
}

.card__icon-button:focus {
  outline: none;
}

.card__icon-button:focus-visible {
  border-color: var(--main-text-color, #000);
}

.button-wrapper {
  display: flex;
  justify-content: center;
  gap: 12px;
  align-self: end;
}

.button {
  position: relative;
  border: 2px solid var(--main-text-color, #000);
  overflow: hidden;
  font-family: var(--font-family-accent);
  font-size: var(--label-text-size, 14px);
  line-height: 90%;
  text-align: center;
  background-color: transparent;
  transition: box-shadow 0.3s ease;
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  box-shadow: 2px 2px 0 var(--main-text-color, #000);
}

.button::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: 1;
  background-color: var(--main-text-color, #000);
  transition: transform 0.5s ease-in-out;
  transform: translateX(-100%);
}

.button:hover::after {
  transform: translateX(0);
}

.card__like-button {
  padding: 11px 0;
  text-transform: capitalize;
  inline-size: 130px;
}

.button__text {
  position: relative;
  z-index: 2;
  color: var(--background-color, #FFF);
  transition: color 0.5s ease-in-out;
  mix-blend-mode: difference;
}

.button svg {
  position: relative;
  z-index: 2;
  color: var(--background-color, #FFF);
  transition: color 0.5s ease-in-out;
  mix-blend-mode: difference;
}

.save-icon {
  color: var(--main-text-color, #000);
  inline-size: clamp(21px, 28px - (7 * (100vw - 375px) / 1065), 28px);
}

.save-button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  margin-block-end: 100px;
  padding-block: 15px;
  background-color: var(--background-color);
  inline-size: clamp(306px, 306px + (33 * (100vw - 375px) / 1065), 339px);
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

dialog[open] {
  display: flex;
  flex-direction: column;
  gap: 30px;
  padding: 30px 40px;
  inline-size: clamp(341px, 341px + (16 * (100vw - 375px) / 1065), 357px);
}

.modal-description {
  display: flex;
  align-items: center;
  gap: 20px;
  transform: none;
}

.save-icon-big {
  flex-grow: 0; /* Отключаем увеличение размера в flex */
  flex-shrink: 0; /* Отключаем уменьшение размера в flex */
  inline-size: 39px;
  block-size: 39px;
}

.modal-text {
  font-family: var(--font-family-accent);
  font-size: var(--label-text-size, 14px);
  line-height: 150%;
  text-transform: uppercase;
}

.close-button {
  border: 2px solid var(--main-text-color, #000);
  padding-block: 11px;
  font-family: var(--font-family-accent);
  font-size: var(--label-text-size, 14px);
  line-height: 90%;
  text-align: center;
  text-transform: uppercase;
}

@media (width <=600px) {
  .save-button {
    flex-direction: column;
  }
}

/* Фильтры */

.combo {
  filter: brightness(1.2) contrast(120%) saturate(150%) blur(2px);
}

.gray {
  filter: grayscale(100%) contrast(150%);
}

.bright {
  filter: brightness(1.5) saturate(200%);
}

.sepia {
  filter: sepia(100%) brightness(0.7);
}

.hue {
  filter: hue-rotate(180deg);
}

.blur {
  filter: blur(2px);
}

.invert {
  filter: invert(1);
}